<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blood Donors Info | Sign Up</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
</head>
<body class="bg-dark">
    <form id="updateForm">
        <input type="hidden" name="_method" value="PUT"> 
        <div class="container-fluid bg-black w-50 h-50 text-primary p-5 d-grid" style="margin-top: 20vh; border-radius: 10px;">
            <h1>Edit Blood Donor</h1>
            <input type="hidden" style="display: none;" name="index" value="<%= index %>">
            <label for="Name">Name</label><input type="text" name="name" id="name" value="<%= user.name %>">
            <small id="nameError" style="color: red;"></small>
            <label for="Age">Age</label><input type="number" name="age" id="age" value="<%= user.age %>">
            <small id="ageError" style="color: red;"></small>
            <label for="PhoneNumber">Phone Number</label><input type="number" name="phonenumber" id="phonenumber" value="<%= user.phonenumber %>">
            <small id="phoneError" style="color: red;"></small>
            <label for="BloodGroup">Blood Group</label><input type="text" name="bloodgroup" id="bloodgroup" value="<%= user.bloodgroup %>">
            <small id="bloodError" style="color: red;"></small>
            <div class="d-flex justify-content-between my-3">
                <button class="btn btn-primary" type="button" onclick="updateDonor(<%= index %>)">Update</button>
                <a href="/"><button class="btn btn-primary" type="button">Home</button></a>
            </div>      
        </div>
    </form>
    <script>
        function updateDonor(index) {
            // Reset error messages
            document.getElementById('nameError').style.display = 'none';
            document.getElementById('phoneError').style.display = 'none';
            document.getElementById('ageError').style.display = 'none';
            document.getElementById('bloodError').style.display = 'none';

            let name = document.getElementById('name').value;
            let age = document.getElementById('age').value;
            let phonenumber = document.getElementById('phonenumber').value;
            let bloodgroup = document.getElementById('bloodgroup').value;

            let count = 0;

            // Validation for Name
            if (!/^[a-zA-Z\s]+$/.test(name) || name.trim().length < 2) {
                let message = "Name should contain only alphabets and be greater than 2 characters";
                document.getElementById('nameError').innerHTML = message;
                document.getElementById('nameError').style.display = 'block';
                count++;
            }

            // Validation for Phone Number
            if (phonenumber.trim() === '' || isNaN(phonenumber) || phonenumber.length !== 10) {
                let message = "Phone number should be a 10-digit number.";
                document.getElementById('phoneError').innerHTML = message;
                document.getElementById('phoneError').style.display = 'block';
                count++;
            }

            // Validation for Age
            if (age.trim() === '' || isNaN(age) || age < 18) {
                let message = "Age should be a number and greater than 18.";
                document.getElementById('ageError').innerHTML = message;
                document.getElementById('ageError').style.display = 'block';
                count++;
            }

            // Validation for Blood Group
            var bloodGroupPattern = /^(A|B|AB|O)[+-]$/;
            if (!bloodGroupPattern.test(bloodgroup)) {
                let message = "Invalid blood group format. Please use A+, A-, B+, B-, O+, O-, AB+, AB-";
                document.getElementById('bloodError').innerHTML = message;
                document.getElementById('bloodError').style.display = 'block';
                count++;
            }

            // Check if there are no validation errors
            if (count === 0) {
                // Perform the update
                const formData = {
                    index: index,
                    name: name,
                    age: age,
                    phonenumber: phonenumber,
                    bloodgroup: bloodgroup
                };

                fetch('/update', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData),
                })
                    .then(response => {
                        if (response.ok) {
                            console.log('Donor updated successfully');
                            window.location.href = '/';
                        } else {
                            console.error('Failed to update donor');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>
</body>
</html>
